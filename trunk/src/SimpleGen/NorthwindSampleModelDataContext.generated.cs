// <autogenerated>
//   This file was generated by T4 code generator DataClasses1.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

namespace Simple.Generator
{
    using System.Data;
    using System.Data.Linq;
    using System.Data.Linq.Mapping;

    [Database(Name = "Northwind")]
    public partial class NorthwindSampleModelDataContext : DataContext
    {
        #region Constructors
        
        public NorthwindSampleModelDataContext()
            : base(Simple.Generator.Properties.Settings.Default.NorthwindConnectionString)
        {
            this.OnCreated();
        }

        public NorthwindSampleModelDataContext(string connection)
            : base(connection)
        {
            this.OnCreated();
        }

        public NorthwindSampleModelDataContext(IDbConnection connection)
            : base(connection)
        {
            this.OnCreated();
        }

        public NorthwindSampleModelDataContext(string connection, MappingSource mappingSource)
            : base(connection, mappingSource)
        {
            this.OnCreated();
        }

        public NorthwindSampleModelDataContext(IDbConnection connection, MappingSource mappingSource)
            : base(connection, mappingSource)
        {
            this.OnCreated();
        }

        #endregion

        #region Table properties
        
        public Table<Category> Categories
        {
            get { return this.GetTable<Category>(); }
        }
        
        public Table<Supplier> Suppliers
        {
            get { return this.GetTable<Supplier>(); }
        }
        
        public Table<CustomerCustomerDemo> CustomerCustomerDemos
        {
            get { return this.GetTable<CustomerCustomerDemo>(); }
        }
        
        public Table<CustomerDemographic> CustomerDemographics
        {
            get { return this.GetTable<CustomerDemographic>(); }
        }
        
        public Table<Customer> Customers
        {
            get { return this.GetTable<Customer>(); }
        }
        
        public Table<Employee> Employees
        {
            get { return this.GetTable<Employee>(); }
        }
        
        public Table<EmployeeTerritory> EmployeeTerritories
        {
            get { return this.GetTable<EmployeeTerritory>(); }
        }
        
        public Table<Order_Detail> Order_Details
        {
            get { return this.GetTable<Order_Detail>(); }
        }
        
        public Table<Order> Orders
        {
            get { return this.GetTable<Order>(); }
        }
        
        public Table<Product> Products
        {
            get { return this.GetTable<Product>(); }
        }
        
        public Table<Region> Regions
        {
            get { return this.GetTable<Region>(); }
        }
        
        public Table<Shipper> Shippers
        {
            get { return this.GetTable<Shipper>(); }
        }
        
        public Table<Territory> Territories
        {
            get { return this.GetTable<Territory>(); }
        }

        #endregion

        #region Extensibility Methods

        partial void OnCreated();
        
        partial void InsertCategory(Category instance);
        
        partial void UpdateCategory(Category instance);
        
        partial void DeleteCategory(Category instance);
        
        partial void InsertSupplier(Supplier instance);
        
        partial void UpdateSupplier(Supplier instance);
        
        partial void DeleteSupplier(Supplier instance);
        
        partial void InsertCustomerCustomerDemo(CustomerCustomerDemo instance);
        
        partial void UpdateCustomerCustomerDemo(CustomerCustomerDemo instance);
        
        partial void DeleteCustomerCustomerDemo(CustomerCustomerDemo instance);
        
        partial void InsertCustomerDemographic(CustomerDemographic instance);
        
        partial void UpdateCustomerDemographic(CustomerDemographic instance);
        
        partial void DeleteCustomerDemographic(CustomerDemographic instance);
        
        partial void InsertCustomer(Customer instance);
        
        partial void UpdateCustomer(Customer instance);
        
        partial void DeleteCustomer(Customer instance);
        
        partial void InsertEmployee(Employee instance);
        
        partial void UpdateEmployee(Employee instance);
        
        partial void DeleteEmployee(Employee instance);
        
        partial void InsertEmployeeTerritory(EmployeeTerritory instance);
        
        partial void UpdateEmployeeTerritory(EmployeeTerritory instance);
        
        partial void DeleteEmployeeTerritory(EmployeeTerritory instance);
        
        partial void InsertOrder_Detail(Order_Detail instance);
        
        partial void UpdateOrder_Detail(Order_Detail instance);
        
        partial void DeleteOrder_Detail(Order_Detail instance);
        
        partial void InsertOrder(Order instance);
        
        partial void UpdateOrder(Order instance);
        
        partial void DeleteOrder(Order instance);
        
        partial void InsertProduct(Product instance);
        
        partial void UpdateProduct(Product instance);
        
        partial void DeleteProduct(Product instance);
        
        partial void InsertRegion(Region instance);
        
        partial void UpdateRegion(Region instance);
        
        partial void DeleteRegion(Region instance);
        
        partial void InsertShipper(Shipper instance);
        
        partial void UpdateShipper(Shipper instance);
        
        partial void DeleteShipper(Shipper instance);
        
        partial void InsertTerritory(Territory instance);
        
        partial void UpdateTerritory(Territory instance);
        
        partial void DeleteTerritory(Territory instance);

        #endregion
    }
}
