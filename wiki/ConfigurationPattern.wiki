#summary Customized localized configuration description


= Introduction =

Simple.NET implements it's own configuration system. Relying on XML standard, the framework provides a elegant way to write configuration definitions. All the configuration is automatically localizable. You don't have even to explicitly tell to configuration manager which location you want.

= Sample =

Suppose it's need to store a string and an integer inside a XML file. The XML structure will look like this:

{{{
<myConfig>
  <someInt>42</someInt>
  <someString>forty-two</someString>
</myConfig>
}}}

Then, to handle this in an OO model, all you should do is to create a configuration class that extends ConfigElement, or ConfigRoot.

In this case, this class should look like:

{{{
[DefaultFile("MyConfig.config")]
public class MyConfig : ConfigRoot<MyConfig>
{
    [ConfigElement("someInt", Required=true)]
    public int SomeInt { get; set; }

    [ConfigElement("someString", Default="someDefaultValue")]
    public string SomeString { get; set; }
}
}}}

This way, the only thing you need to get the configuration is to call:
{{{
MyConfig config = MyConfig.Get()
}}}